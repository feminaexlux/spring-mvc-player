/**
 * This class is generated by jOOQ
 */
package net.feminaexlux.player.model.table;

import net.feminaexlux.player.model.Key;
import net.feminaexlux.player.model.Media;
import net.feminaexlux.player.model.table.record.ResourceRecord;
import org.jooq.Field;
import org.jooq.ForeignKey;
import org.jooq.Table;
import org.jooq.TableField;
import org.jooq.UniqueKey;
import org.jooq.impl.SQLDataType;
import org.jooq.impl.TableImpl;

import javax.annotation.Generated;
import java.sql.Timestamp;
import java.util.Arrays;
import java.util.List;

/**
 * This class is generated by jOOQ.
 */
@Generated(
		value = {
				"http://www.jooq.org",
				"jOOQ version:3.5.0"
		},
		comments = "This class is generated by jOOQ"
)
@SuppressWarnings({"all", "unchecked", "rawtypes"})
public class Resource extends TableImpl<ResourceRecord> {

	private static final long serialVersionUID = 1045138819;

	/**
	 * The reference instance of <code>media.resource</code>
	 */
	public static final Resource RESOURCE = new Resource();

	/**
	 * The class holding records for this type
	 */
	@Override
	public Class<ResourceRecord> getRecordType() {
		return ResourceRecord.class;
	}

	/**
	 * The column <code>media.resource.checksum</code>.
	 */
	public final TableField<ResourceRecord, String> CHECKSUM = createField("checksum", SQLDataType.VARCHAR.length(255).nullable(false), this, "");

	/**
	 * The column <code>media.resource.directory</code>.
	 */
	public final TableField<ResourceRecord, String> DIRECTORY = createField("directory", SQLDataType.VARCHAR.length(255).nullable(false), this, "");

	/**
	 * The column <code>media.resource.type</code>.
	 */
	public final TableField<ResourceRecord, String> TYPE = createField("type", SQLDataType.VARCHAR.length(255).nullable(false), this, "");

	/**
	 * The column <code>media.resource.path</code>.
	 */
	public final TableField<ResourceRecord, String> PATH = createField("path", SQLDataType.VARCHAR.length(255).nullable(false), this, "");

	/**
	 * The column <code>media.resource.last_updated</code>.
	 */
	public final TableField<ResourceRecord, Timestamp> LAST_UPDATED = createField("last_updated", SQLDataType.TIMESTAMP, this, "");

	/**
	 * Create a <code>media.resource</code> table reference
	 */
	public Resource() {
		this("resource", null);
	}

	/**
	 * Create an aliased <code>media.resource</code> table reference
	 */
	public Resource(String alias) {
		this(alias, Resource.RESOURCE);
	}

	private Resource(String alias, Table<ResourceRecord> aliased) {
		this(alias, aliased, null);
	}

	private Resource(String alias, Table<ResourceRecord> aliased, Field<?>[] parameters) {
		super(alias, Media.MEDIA, aliased, parameters, "");
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public UniqueKey<ResourceRecord> getPrimaryKey() {
		return Key.KEY_RESOURCE_PRIMARY;
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public List<UniqueKey<ResourceRecord>> getKeys() {
		return Arrays.<UniqueKey<ResourceRecord>>asList(Key.KEY_RESOURCE_PRIMARY);
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public List<ForeignKey<ResourceRecord, ?>> getReferences() {
		return Arrays.<ForeignKey<ResourceRecord, ?>>asList(Key.FK1_RESOURCE_DIRECTORY_DIRECTORY, Key.FK2_RESOURCE_DIRECTORY_TYPE, Key.FK3_RESOURCE_TYPE_TYPE);
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public Resource as(String alias) {
		return new Resource(alias, this);
	}

	/**
	 * Rename this table
	 */
	public Resource rename(String name) {
		return new Resource(name, null);
	}
}
