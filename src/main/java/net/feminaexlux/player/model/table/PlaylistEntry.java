/**
 * This class is generated by jOOQ
 */
package net.feminaexlux.player.model.table;

import net.feminaexlux.player.model.Key;
import net.feminaexlux.player.model.Media;
import net.feminaexlux.player.model.table.record.PlaylistEntryRecord;
import org.jooq.Field;
import org.jooq.ForeignKey;
import org.jooq.Table;
import org.jooq.TableField;
import org.jooq.UniqueKey;
import org.jooq.impl.SQLDataType;
import org.jooq.impl.TableImpl;

import javax.annotation.Generated;
import java.util.Arrays;
import java.util.List;

/**
 * This class is generated by jOOQ.
 */
@Generated(
		value = {
				"http://www.jooq.org",
				"jOOQ version:3.5.0"
		},
		comments = "This class is generated by jOOQ"
)
@SuppressWarnings({"all", "unchecked", "rawtypes"})
public class PlaylistEntry extends TableImpl<PlaylistEntryRecord> {

	private static final long serialVersionUID = 225657881;

	/**
	 * The reference instance of <code>media.playlist_entry</code>
	 */
	public static final PlaylistEntry PLAYLIST_ENTRY = new PlaylistEntry();

	/**
	 * The class holding records for this type
	 */
	@Override
	public Class<PlaylistEntryRecord> getRecordType() {
		return PlaylistEntryRecord.class;
	}

	/**
	 * The column <code>media.playlist_entry.playlist</code>.
	 */
	public final TableField<PlaylistEntryRecord, String> PLAYLIST = createField("playlist", SQLDataType.VARCHAR.length(255).nullable(false), this, "");

	/**
	 * The column <code>media.playlist_entry.user</code>.
	 */
	public final TableField<PlaylistEntryRecord, String> USER = createField("user", SQLDataType.VARCHAR.length(255).nullable(false), this, "");

	/**
	 * The column <code>media.playlist_entry.order</code>.
	 */
	public final TableField<PlaylistEntryRecord, Integer> ORDER = createField("order", SQLDataType.INTEGER.nullable(false), this, "");

	/**
	 * The column <code>media.playlist_entry.resource</code>.
	 */
	public final TableField<PlaylistEntryRecord, String> RESOURCE = createField("resource", SQLDataType.VARCHAR.length(40).nullable(false), this, "");

	/**
	 * Create a <code>media.playlist_entry</code> table reference
	 */
	public PlaylistEntry() {
		this("playlist_entry", null);
	}

	/**
	 * Create an aliased <code>media.playlist_entry</code> table reference
	 */
	public PlaylistEntry(String alias) {
		this(alias, PlaylistEntry.PLAYLIST_ENTRY);
	}

	private PlaylistEntry(String alias, Table<PlaylistEntryRecord> aliased) {
		this(alias, aliased, null);
	}

	private PlaylistEntry(String alias, Table<PlaylistEntryRecord> aliased, Field<?>[] parameters) {
		super(alias, Media.MEDIA, aliased, parameters, "");
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public UniqueKey<PlaylistEntryRecord> getPrimaryKey() {
		return Key.KEY_PLAYLIST_ENTRY_PRIMARY;
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public List<UniqueKey<PlaylistEntryRecord>> getKeys() {
		return Arrays.<UniqueKey<PlaylistEntryRecord>>asList(Key.KEY_PLAYLIST_ENTRY_PRIMARY);
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public List<ForeignKey<PlaylistEntryRecord, ?>> getReferences() {
		return Arrays.<ForeignKey<PlaylistEntryRecord, ?>>asList(Key.FK1_PLAYLIST_ENTRY_PLAYLIST);
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public PlaylistEntry as(String alias) {
		return new PlaylistEntry(alias, this);
	}

	/**
	 * Rename this table
	 */
	public PlaylistEntry rename(String name) {
		return new PlaylistEntry(name, null);
	}
}
