/**
 * This class is generated by jOOQ
 */
package net.feminaexlux.player.model.table.record;

import net.feminaexlux.player.model.table.Music;
import org.jooq.Field;
import org.jooq.Record1;
import org.jooq.Record9;
import org.jooq.Row9;
import org.jooq.impl.UpdatableRecordImpl;

import javax.annotation.Generated;

/**
 * This class is generated by jOOQ.
 */
@Generated(
		value = {
				"http://www.jooq.org",
				"jOOQ version:3.5.0"
		},
		comments = "This class is generated by jOOQ"
)
@SuppressWarnings({"all", "unchecked", "rawtypes"})
public class MusicRecord extends UpdatableRecordImpl<MusicRecord> implements Record9<String, String, String, String, String, Byte, String, Short, String> {

	private static final long serialVersionUID = 717167718;

	/**
	 * Setter for <code>media.music.checksum</code>.
	 */
	public void setChecksum(String value) {
		setValue(0, value);
	}

	/**
	 * Getter for <code>media.music.checksum</code>.
	 */
	public String getChecksum() {
		return (String) getValue(0);
	}

	/**
	 * Setter for <code>media.music.artist</code>.
	 */
	public void setArtist(String value) {
		setValue(1, value);
	}

	/**
	 * Getter for <code>media.music.artist</code>.
	 */
	public String getArtist() {
		return (String) getValue(1);
	}

	/**
	 * Setter for <code>media.music.artist_url</code>.
	 */
	public void setArtistUrl(String value) {
		setValue(2, value);
	}

	/**
	 * Getter for <code>media.music.artist_url</code>.
	 */
	public String getArtistUrl() {
		return (String) getValue(2);
	}

	/**
	 * Setter for <code>media.music.album</code>.
	 */
	public void setAlbum(String value) {
		setValue(3, value);
	}

	/**
	 * Getter for <code>media.music.album</code>.
	 */
	public String getAlbum() {
		return (String) getValue(3);
	}

	/**
	 * Setter for <code>media.music.album_url</code>.
	 */
	public void setAlbumUrl(String value) {
		setValue(4, value);
	}

	/**
	 * Getter for <code>media.music.album_url</code>.
	 */
	public String getAlbumUrl() {
		return (String) getValue(4);
	}

	/**
	 * Setter for <code>media.music.track_number</code>.
	 */
	public void setTrackNumber(Byte value) {
		setValue(5, value);
	}

	/**
	 * Getter for <code>media.music.track_number</code>.
	 */
	public Byte getTrackNumber() {
		return (Byte) getValue(5);
	}

	/**
	 * Setter for <code>media.music.title</code>.
	 */
	public void setTitle(String value) {
		setValue(6, value);
	}

	/**
	 * Getter for <code>media.music.title</code>.
	 */
	public String getTitle() {
		return (String) getValue(6);
	}

	/**
	 * Setter for <code>media.music.year</code>.
	 */
	public void setYear(Short value) {
		setValue(7, value);
	}

	/**
	 * Getter for <code>media.music.year</code>.
	 */
	public Short getYear() {
		return (Short) getValue(7);
	}

	/**
	 * Setter for <code>media.music.genre</code>.
	 */
	public void setGenre(String value) {
		setValue(8, value);
	}

	/**
	 * Getter for <code>media.music.genre</code>.
	 */
	public String getGenre() {
		return (String) getValue(8);
	}

	// -------------------------------------------------------------------------
	// Primary key information
	// -------------------------------------------------------------------------

	/**
	 * {@inheritDoc}
	 */
	@Override
	public Record1<String> key() {
		return (Record1) super.key();
	}

	// -------------------------------------------------------------------------
	// Record9 type implementation
	// -------------------------------------------------------------------------

	/**
	 * {@inheritDoc}
	 */
	@Override
	public Row9<String, String, String, String, String, Byte, String, Short, String> fieldsRow() {
		return (Row9) super.fieldsRow();
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public Row9<String, String, String, String, String, Byte, String, Short, String> valuesRow() {
		return (Row9) super.valuesRow();
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public Field<String> field1() {
		return Music.MUSIC.CHECKSUM;
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public Field<String> field2() {
		return Music.MUSIC.ARTIST;
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public Field<String> field3() {
		return Music.MUSIC.ARTIST_URL;
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public Field<String> field4() {
		return Music.MUSIC.ALBUM;
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public Field<String> field5() {
		return Music.MUSIC.ALBUM_URL;
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public Field<Byte> field6() {
		return Music.MUSIC.TRACK_NUMBER;
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public Field<String> field7() {
		return Music.MUSIC.TITLE;
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public Field<Short> field8() {
		return Music.MUSIC.YEAR;
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public Field<String> field9() {
		return Music.MUSIC.GENRE;
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public String value1() {
		return getChecksum();
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public String value2() {
		return getArtist();
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public String value3() {
		return getArtistUrl();
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public String value4() {
		return getAlbum();
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public String value5() {
		return getAlbumUrl();
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public Byte value6() {
		return getTrackNumber();
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public String value7() {
		return getTitle();
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public Short value8() {
		return getYear();
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public String value9() {
		return getGenre();
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public MusicRecord value1(String value) {
		setChecksum(value);
		return this;
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public MusicRecord value2(String value) {
		setArtist(value);
		return this;
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public MusicRecord value3(String value) {
		setArtistUrl(value);
		return this;
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public MusicRecord value4(String value) {
		setAlbum(value);
		return this;
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public MusicRecord value5(String value) {
		setAlbumUrl(value);
		return this;
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public MusicRecord value6(Byte value) {
		setTrackNumber(value);
		return this;
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public MusicRecord value7(String value) {
		setTitle(value);
		return this;
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public MusicRecord value8(Short value) {
		setYear(value);
		return this;
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public MusicRecord value9(String value) {
		setGenre(value);
		return this;
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public MusicRecord values(String value1, String value2, String value3, String value4, String value5, Byte value6, String value7, Short value8, String value9) {
		return this;
	}

	// -------------------------------------------------------------------------
	// Constructors
	// -------------------------------------------------------------------------

	/**
	 * Create a detached MusicRecord
	 */
	public MusicRecord() {
		super(Music.MUSIC);
	}

	/**
	 * Create a detached, initialised MusicRecord
	 */
	public MusicRecord(String checksum, String artist, String artistUrl, String album, String albumUrl, Byte trackNumber, String title, Short year, String genre) {
		super(Music.MUSIC);

		setValue(0, checksum);
		setValue(1, artist);
		setValue(2, artistUrl);
		setValue(3, album);
		setValue(4, albumUrl);
		setValue(5, trackNumber);
		setValue(6, title);
		setValue(7, year);
		setValue(8, genre);
	}
}
