/**
 * This class is generated by jOOQ
 */
package net.feminaexlux.player.model.table.record;

import net.feminaexlux.player.model.table.UserPlayed;
import org.jooq.Field;
import org.jooq.Record2;
import org.jooq.Record4;
import org.jooq.Row4;
import org.jooq.impl.UpdatableRecordImpl;

import javax.annotation.Generated;
import java.sql.Timestamp;

/**
 * This class is generated by jOOQ.
 */
@Generated(
		value = {
				"http://www.jooq.org",
				"jOOQ version:3.5.0"
		},
		comments = "This class is generated by jOOQ"
)
@SuppressWarnings({"all", "unchecked", "rawtypes"})
public class UserPlayedRecord extends UpdatableRecordImpl<UserPlayedRecord> implements Record4<String, String, Timestamp, Byte> {

	private static final long serialVersionUID = 537783801;

	/**
	 * Setter for <code>media.user_played.username</code>.
	 */
	public void setUsername(String value) {
		setValue(0, value);
	}

	/**
	 * Getter for <code>media.user_played.username</code>.
	 */
	public String getUsername() {
		return (String) getValue(0);
	}

	/**
	 * Setter for <code>media.user_played.resource</code>.
	 */
	public void setResource(String value) {
		setValue(1, value);
	}

	/**
	 * Getter for <code>media.user_played.resource</code>.
	 */
	public String getResource() {
		return (String) getValue(1);
	}

	/**
	 * Setter for <code>media.user_played.last_played</code>.
	 */
	public void setLastPlayed(Timestamp value) {
		setValue(2, value);
	}

	/**
	 * Getter for <code>media.user_played.last_played</code>.
	 */
	public Timestamp getLastPlayed() {
		return (Timestamp) getValue(2);
	}

	/**
	 * Setter for <code>media.user_played.rating</code>.
	 */
	public void setRating(Byte value) {
		setValue(3, value);
	}

	/**
	 * Getter for <code>media.user_played.rating</code>.
	 */
	public Byte getRating() {
		return (Byte) getValue(3);
	}

	// -------------------------------------------------------------------------
	// Primary key information
	// -------------------------------------------------------------------------

	/**
	 * {@inheritDoc}
	 */
	@Override
	public Record2<String, String> key() {
		return (Record2) super.key();
	}

	// -------------------------------------------------------------------------
	// Record4 type implementation
	// -------------------------------------------------------------------------

	/**
	 * {@inheritDoc}
	 */
	@Override
	public Row4<String, String, Timestamp, Byte> fieldsRow() {
		return (Row4) super.fieldsRow();
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public Row4<String, String, Timestamp, Byte> valuesRow() {
		return (Row4) super.valuesRow();
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public Field<String> field1() {
		return UserPlayed.USER_PLAYED.USERNAME;
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public Field<String> field2() {
		return UserPlayed.USER_PLAYED.RESOURCE;
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public Field<Timestamp> field3() {
		return UserPlayed.USER_PLAYED.LAST_PLAYED;
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public Field<Byte> field4() {
		return UserPlayed.USER_PLAYED.RATING;
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public String value1() {
		return getUsername();
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public String value2() {
		return getResource();
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public Timestamp value3() {
		return getLastPlayed();
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public Byte value4() {
		return getRating();
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public UserPlayedRecord value1(String value) {
		setUsername(value);
		return this;
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public UserPlayedRecord value2(String value) {
		setResource(value);
		return this;
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public UserPlayedRecord value3(Timestamp value) {
		setLastPlayed(value);
		return this;
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public UserPlayedRecord value4(Byte value) {
		setRating(value);
		return this;
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public UserPlayedRecord values(String value1, String value2, Timestamp value3, Byte value4) {
		return this;
	}

	// -------------------------------------------------------------------------
	// Constructors
	// -------------------------------------------------------------------------

	/**
	 * Create a detached UserPlayedRecord
	 */
	public UserPlayedRecord() {
		super(UserPlayed.USER_PLAYED);
	}

	/**
	 * Create a detached, initialised UserPlayedRecord
	 */
	public UserPlayedRecord(String username, String resource, Timestamp lastPlayed, Byte rating) {
		super(UserPlayed.USER_PLAYED);

		setValue(0, username);
		setValue(1, resource);
		setValue(2, lastPlayed);
		setValue(3, rating);
	}
}
