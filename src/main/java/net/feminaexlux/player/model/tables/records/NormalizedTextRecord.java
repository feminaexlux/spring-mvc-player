/**
 * This class is generated by jOOQ
 */
package net.feminaexlux.player.model.tables.records;

/**
 * This class is generated by jOOQ.
 */
@javax.annotation.Generated(
		value = {
				"http://www.jooq.org",
				"jOOQ version:3.5.0"
		},
		comments = "This class is generated by jOOQ"
)
@java.lang.SuppressWarnings({"all", "unchecked", "rawtypes"})
public class NormalizedTextRecord extends org.jooq.impl.UpdatableRecordImpl<net.feminaexlux.player.model.tables.records.NormalizedTextRecord> implements org.jooq.Record2<java.lang.String, java.lang.String> {

	private static final long serialVersionUID = -1166296076;

	/**
	 * Setter for <code>media.normalized_text.original</code>.
	 */
	public void setOriginal(java.lang.String value) {
		setValue(0, value);
	}

	/**
	 * Getter for <code>media.normalized_text.original</code>.
	 */
	public java.lang.String getOriginal() {
		return (java.lang.String) getValue(0);
	}

	/**
	 * Setter for <code>media.normalized_text.normalized</code>.
	 */
	public void setNormalized(java.lang.String value) {
		setValue(1, value);
	}

	/**
	 * Getter for <code>media.normalized_text.normalized</code>.
	 */
	public java.lang.String getNormalized() {
		return (java.lang.String) getValue(1);
	}

	// -------------------------------------------------------------------------
	// Primary key information
	// -------------------------------------------------------------------------

	/**
	 * {@inheritDoc}
	 */
	@Override
	public org.jooq.Record1<java.lang.String> key() {
		return (org.jooq.Record1) super.key();
	}

	// -------------------------------------------------------------------------
	// Record2 type implementation
	// -------------------------------------------------------------------------

	/**
	 * {@inheritDoc}
	 */
	@Override
	public org.jooq.Row2<java.lang.String, java.lang.String> fieldsRow() {
		return (org.jooq.Row2) super.fieldsRow();
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public org.jooq.Row2<java.lang.String, java.lang.String> valuesRow() {
		return (org.jooq.Row2) super.valuesRow();
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public org.jooq.Field<java.lang.String> field1() {
		return net.feminaexlux.player.model.tables.NormalizedText.NORMALIZED_TEXT.ORIGINAL;
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public org.jooq.Field<java.lang.String> field2() {
		return net.feminaexlux.player.model.tables.NormalizedText.NORMALIZED_TEXT.NORMALIZED;
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public java.lang.String value1() {
		return getOriginal();
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public java.lang.String value2() {
		return getNormalized();
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public NormalizedTextRecord value1(java.lang.String value) {
		setOriginal(value);
		return this;
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public NormalizedTextRecord value2(java.lang.String value) {
		setNormalized(value);
		return this;
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public NormalizedTextRecord values(java.lang.String value1, java.lang.String value2) {
		return this;
	}

	// -------------------------------------------------------------------------
	// Constructors
	// -------------------------------------------------------------------------

	/**
	 * Create a detached NormalizedTextRecord
	 */
	public NormalizedTextRecord() {
		super(net.feminaexlux.player.model.tables.NormalizedText.NORMALIZED_TEXT);
	}

	/**
	 * Create a detached, initialised NormalizedTextRecord
	 */
	public NormalizedTextRecord(java.lang.String original, java.lang.String normalized) {
		super(net.feminaexlux.player.model.tables.NormalizedText.NORMALIZED_TEXT);

		setValue(0, original);
		setValue(1, normalized);
	}
}
