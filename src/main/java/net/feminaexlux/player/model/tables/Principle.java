/**
 * This class is generated by jOOQ
 */
package net.feminaexlux.player.model.tables;

import net.feminaexlux.player.model.Keys;
import net.feminaexlux.player.model.Media;
import net.feminaexlux.player.model.tables.records.PrincipleRecord;
import org.jooq.Field;
import org.jooq.Table;
import org.jooq.TableField;
import org.jooq.UniqueKey;
import org.jooq.impl.SQLDataType;
import org.jooq.impl.TableImpl;

import javax.annotation.Generated;
import java.util.Arrays;
import java.util.List;

/**
 * This class is generated by jOOQ.
 */
@Generated(
		value = {
				"http://www.jooq.org",
				"jOOQ version:3.5.0"
		},
		comments = "This class is generated by jOOQ"
)
@SuppressWarnings({"all", "unchecked", "rawtypes"})
public class Principle extends TableImpl<PrincipleRecord> {

	private static final long serialVersionUID = -1094079425;

	/**
	 * The reference instance of <code>media.principle</code>
	 */
	public static final Principle PRINCIPLE = new Principle();

	/**
	 * The class holding records for this type
	 */
	@Override
	public Class<PrincipleRecord> getRecordType() {
		return PrincipleRecord.class;
	}

	/**
	 * The column <code>media.principle.username</code>.
	 */
	public final TableField<PrincipleRecord, String> USERNAME = createField("username", SQLDataType.VARCHAR.length(255).nullable(false), this, "");

	/**
	 * The column <code>media.principle.password</code>.
	 */
	public final TableField<PrincipleRecord, String> PASSWORD = createField("password", SQLDataType.VARCHAR.length(255).nullable(false), this, "");

	/**
	 * The column <code>media.principle.name</code>.
	 */
	public final TableField<PrincipleRecord, String> NAME = createField("name", SQLDataType.VARCHAR.length(255).nullable(false), this, "");

	/**
	 * The column <code>media.principle.lastLogin</code>.
	 */
	public final TableField<PrincipleRecord, java.sql.Timestamp> LASTLOGIN = createField("lastLogin", SQLDataType.TIMESTAMP, this, "");

	/**
	 * Create a <code>media.principle</code> table reference
	 */
	public Principle() {
		this("principle", null);
	}

	/**
	 * Create an aliased <code>media.principle</code> table reference
	 */
	public Principle(String alias) {
		this(alias, Principle.PRINCIPLE);
	}

	private Principle(String alias, Table<PrincipleRecord> aliased) {
		this(alias, aliased, null);
	}

	private Principle(String alias, Table<PrincipleRecord> aliased, Field<?>[] parameters) {
		super(alias, Media.MEDIA, aliased, parameters, "");
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public UniqueKey<PrincipleRecord> getPrimaryKey() {
		return Keys.KEY_PRINCIPLE_PRIMARY;
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public List<UniqueKey<PrincipleRecord>> getKeys() {
		return Arrays.<UniqueKey<PrincipleRecord>>asList(Keys.KEY_PRINCIPLE_PRIMARY);
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public Principle as(String alias) {
		return new Principle(alias, this);
	}

	/**
	 * Rename this table
	 */
	public Principle rename(String name) {
		return new Principle(name, null);
	}
}
