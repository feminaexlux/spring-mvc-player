/**
 * This class is generated by jOOQ
 */
package net.feminaexlux.player.model.tables.records;

/**
 * This class is generated by jOOQ.
 */
@javax.annotation.Generated(
		value = {
				"http://www.jooq.org",
				"jOOQ version:3.5.0"
		},
		comments = "This class is generated by jOOQ"
)
@java.lang.SuppressWarnings({"all", "unchecked", "rawtypes"})
public class DirectoryRecord extends org.jooq.impl.UpdatableRecordImpl<net.feminaexlux.player.model.tables.records.DirectoryRecord> implements org.jooq.Record3<java.lang.String, java.lang.String, java.sql.Timestamp> {

	private static final long serialVersionUID = -775288647;

	/**
	 * Setter for <code>media.directory.location</code>.
	 */
	public void setLocation(java.lang.String value) {
		setValue(0, value);
	}

	/**
	 * Getter for <code>media.directory.location</code>.
	 */
	public java.lang.String getLocation() {
		return (java.lang.String) getValue(0);
	}

	/**
	 * Setter for <code>media.directory.type</code>.
	 */
	public void setType(java.lang.String value) {
		setValue(1, value);
	}

	/**
	 * Getter for <code>media.directory.type</code>.
	 */
	public java.lang.String getType() {
		return (java.lang.String) getValue(1);
	}

	/**
	 * Setter for <code>media.directory.lastScanned</code>.
	 */
	public void setLastscanned(java.sql.Timestamp value) {
		setValue(2, value);
	}

	/**
	 * Getter for <code>media.directory.lastScanned</code>.
	 */
	public java.sql.Timestamp getLastscanned() {
		return (java.sql.Timestamp) getValue(2);
	}

	// -------------------------------------------------------------------------
	// Primary key information
	// -------------------------------------------------------------------------

	/**
	 * {@inheritDoc}
	 */
	@Override
	public org.jooq.Record1<java.lang.String> key() {
		return (org.jooq.Record1) super.key();
	}

	// -------------------------------------------------------------------------
	// Record3 type implementation
	// -------------------------------------------------------------------------

	/**
	 * {@inheritDoc}
	 */
	@Override
	public org.jooq.Row3<java.lang.String, java.lang.String, java.sql.Timestamp> fieldsRow() {
		return (org.jooq.Row3) super.fieldsRow();
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public org.jooq.Row3<java.lang.String, java.lang.String, java.sql.Timestamp> valuesRow() {
		return (org.jooq.Row3) super.valuesRow();
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public org.jooq.Field<java.lang.String> field1() {
		return net.feminaexlux.player.model.tables.Directory.DIRECTORY.LOCATION;
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public org.jooq.Field<java.lang.String> field2() {
		return net.feminaexlux.player.model.tables.Directory.DIRECTORY.TYPE;
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public org.jooq.Field<java.sql.Timestamp> field3() {
		return net.feminaexlux.player.model.tables.Directory.DIRECTORY.LASTSCANNED;
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public java.lang.String value1() {
		return getLocation();
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public java.lang.String value2() {
		return getType();
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public java.sql.Timestamp value3() {
		return getLastscanned();
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public DirectoryRecord value1(java.lang.String value) {
		setLocation(value);
		return this;
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public DirectoryRecord value2(java.lang.String value) {
		setType(value);
		return this;
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public DirectoryRecord value3(java.sql.Timestamp value) {
		setLastscanned(value);
		return this;
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public DirectoryRecord values(java.lang.String value1, java.lang.String value2, java.sql.Timestamp value3) {
		return this;
	}

	// -------------------------------------------------------------------------
	// Constructors
	// -------------------------------------------------------------------------

	/**
	 * Create a detached DirectoryRecord
	 */
	public DirectoryRecord() {
		super(net.feminaexlux.player.model.tables.Directory.DIRECTORY);
	}

	/**
	 * Create a detached, initialised DirectoryRecord
	 */
	public DirectoryRecord(java.lang.String location, java.lang.String type, java.sql.Timestamp lastscanned) {
		super(net.feminaexlux.player.model.tables.Directory.DIRECTORY);

		setValue(0, location);
		setValue(1, type);
		setValue(2, lastscanned);
	}
}
